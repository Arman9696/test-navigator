version: '2'
services:
  php:
    build: ./docker/php
    container_name: php
    volumes_from:
    - source
    ports:
    - '9000:9000'
    links:
    - mysql
    - memcached
    networks:
    - bitrix
    restart: always
  nginx:
    build: ./docker/nginx
    container_name: nginx
    depends_on:
    - source
    volumes_from:
    - source
    volumes:
    - ./docker/certbot/conf:/etc/letsencrypt
    - ./docker/certbot/www:/var/www/certbot
    - ./docker/nginx/conf/nginx.conf:/etc/nginx/nginx.conf
    - ./docker/nginx/conf/seo.conf:/etc/nginx/seo.conf
    - ./docker/nginx/conf/default.conf:/etc/nginx/conf.d/default.conf
    - ./docker/nginx/conf/upstream.conf:/etc/nginx/conf.d/upstream.conf
    ports:
    - '80:80'
    - '443:443'
    links:
    - php
    networks:
    - bitrix
    restart: always
  source:
    image: alpine:latest
    container_name: source
    volumes:
    - /var/run/docker.sock:/tmp/docker.sock:ro
    - ./data/mysql:/var/lib/mysql
    - ./data/memcached:/var/lib/memcached
    - ./:/var/www/bitrix
    networks:
    - bitrix
  mysql:
    build: ./docker/db
    container_name: mysql
    volumes_from:
    - source
    ports:
    - '3306:3306'
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_RANDOM_ROOT_PASSWORD: 'yes'
    command: mysqld --sql-mode=""
    networks:
    - bitrix
    restart: always
  memcached:
    image: memcached:1.5-alpine
    container_name: memcached
    volumes_from:
    - source
    ports:
    - '11211:11211'
    networks:
    - bitrix
    restart: always
  certbot:
    image: certbot/certbot
    container_name: certbot
    networks:
    - bitrix
    restart: always
    volumes:
    - ./docker/certbot/conf:/etc/letsencrypt
    - ./docker/certbot/www:/var/www/certbot
    entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"
  portainer:
    image: portainer/portainer
    container_name: portainer
    ports:
    - 777:9000
    volumes:
    - /var/run/docker.sock:/var/run/docker.sock
    restart: always

networks:
  bitrix:
    driver: bridge
    ipam:
      driver: default
      config:
      - subnet: 10.100.0.0/24